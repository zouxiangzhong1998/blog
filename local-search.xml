<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Java布尔运算</title>
    <link href="/blog/2024/08/b648de2b6e3a.html"/>
    <url>/blog/2024/08/b648de2b6e3a.html</url>
    
    <content type="html"><![CDATA[<p>对于布尔类型<code>boolean</code>，永远只有<code>true</code>和<code>false</code>两个值。</p><p>布尔运算是一种关系运算，包括以下几类：</p><ul><li>比较运算符：<code>&gt;</code>，<code>&gt;=</code>，<code>&lt;</code>，<code>&lt;=</code>，<code>==</code>，<code>!=</code></li><li>与运算 <code>&amp;&amp;</code></li><li>或运算 <code>||</code></li><li>非运算 <code>!</code></li></ul><p>下面是一些示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">boolean</span> <span class="hljs-variable">isGreater</span> <span class="hljs-operator">=</span> <span class="hljs-number">5</span> &gt; <span class="hljs-number">3</span>; <span class="hljs-comment">// true</span><br><span class="hljs-type">int</span> <span class="hljs-variable">age</span> <span class="hljs-operator">=</span> <span class="hljs-number">12</span>;<br><span class="hljs-type">boolean</span> <span class="hljs-variable">isZero</span> <span class="hljs-operator">=</span> age == <span class="hljs-number">0</span>; <span class="hljs-comment">// false</span><br><span class="hljs-type">boolean</span> <span class="hljs-variable">isNonZero</span> <span class="hljs-operator">=</span> !isZero; <span class="hljs-comment">// true</span><br><span class="hljs-type">boolean</span> <span class="hljs-variable">isAdult</span> <span class="hljs-operator">=</span> age &gt;= <span class="hljs-number">18</span>; <span class="hljs-comment">// false</span><br><span class="hljs-type">boolean</span> <span class="hljs-variable">isTeenager</span> <span class="hljs-operator">=</span> age &gt;<span class="hljs-number">6</span> &amp;&amp; age &lt;<span class="hljs-number">18</span>; <span class="hljs-comment">// true</span><br></code></pre></td></tr></table></figure><p>关系运算符的优先级从高到低依次是：</p><ul><li><code>!</code></li><li><code>&gt;</code>，<code>&gt;=</code>，<code>&lt;</code>，<code>&lt;=</code></li><li><code>==</code>，<code>!=</code></li><li><code>&amp;&amp;</code></li><li><code>||</code></li></ul><hr><h3 id="短路运算"><a href="#短路运算" class="headerlink" title="短路运算"></a>短路运算</h3><p>布尔运算的一个重要特点是短路运算。如果一个布尔运算的表达式能提前确定结果，则后续的计算不再执行，直接返回结果。</p><p>我们考察以下代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 短路运算</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">boolean</span> <span class="hljs-variable">b</span> <span class="hljs-operator">=</span> <span class="hljs-number">5</span> &lt; <span class="hljs-number">3</span>;<br>        <span class="hljs-type">boolean</span> <span class="hljs-variable">result</span> <span class="hljs-operator">=</span> b &amp;&amp; (<span class="hljs-number">5</span> / <span class="hljs-number">0</span> &gt; <span class="hljs-number">0</span>); <span class="hljs-comment">// 此处 5 / 0 不会报错</span><br>        System.out.println(result);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>如果没有短路运算，<code>&amp;&amp;</code>后面的表达式会由于除数为<code>0</code>而报错，但实际上该语句并未报错，原因在于与运算是短路运算符，提前计算出了结果<code>false</code>。</p><p>如果变量<code>b</code>的值为<code>true</code>，则表达式变为<code>true &amp;&amp; (5 / 0 &gt; 0)</code>。因为无法进行短路运算，该表达式必定会由于除数为<code>0</code>而报错，可以自行测试。</p><p>类似的，对于<code>||</code>运算，只要能确定第一个值为<code>true</code>，后续计算也不再进行，而是直接返回<code>true</code>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">boolean</span> <span class="hljs-variable">result</span> <span class="hljs-operator">=</span> <span class="hljs-literal">true</span> || (<span class="hljs-number">5</span> / <span class="hljs-number">0</span> &gt; <span class="hljs-number">0</span>); <span class="hljs-comment">// true</span><br></code></pre></td></tr></table></figure><hr><h3 id="三元运算符"><a href="#三元运算符" class="headerlink" title="三元运算符"></a>三元运算符</h3><p>Java还提供一个三元运算符<code>b ? x : y</code>，它根据第一个布尔表达式的结果，分别返回后续两个表达式之一的计算结果。示例：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 三元运算</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">n</span> <span class="hljs-operator">=</span> -<span class="hljs-number">100</span>;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">x</span> <span class="hljs-operator">=</span> n &gt;= <span class="hljs-number">0</span> ? n : -n;<br>        System.out.println(x);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>上述语句的意思是，判断<code>n &gt;= 0</code>是否成立，如果为<code>true</code>，则返回<code>n</code>，否则返回<code>-n</code>。这实际上是一个求绝对值的表达式。</p><p>注意到三元运算<code>b ? x : y</code>会首先计算<code>b</code>，如果<code>b</code>为<code>true</code>，则只计算<code>x</code>，否则，只计算<code>y</code>。此外，<code>x</code>和<code>y</code>的类型必须相同，因为返回值不是<code>boolean</code>，而是<code>x</code>和<code>y</code>之一。</p><hr><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>与运算和或运算是短路运算；</p><p>三元运算<code>b ? x : y</code>后面的类型必须相同，三元运算也是“短路运算”，只计算<code>x</code>或<code>y</code>。</p>]]></content>
    
    
    <categories>
      
      <category>编程语言</category>
      
      <category>Java</category>
      
      <category>Java基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>Java基础</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java浮点数运算</title>
    <link href="/blog/2024/08/5c0430274d07.html"/>
    <url>/blog/2024/08/5c0430274d07.html</url>
    
    <content type="html"><![CDATA[<p>浮点数运算和整数运算相比，只能进行加减乘除这些数值计算，不能做位运算和移位运算。</p><p>在计算机中，浮点数虽然表示的范围大，但是，浮点数有个非常重要的特点，就是浮点数常常无法精确表示。</p><p>举个例子：<br>浮点数<code>0.1</code>在计算机中就无法精确表示，因为十进制的<code>0.1</code>换算成二进制是一个无限循环小数，很显然，无论使用<code>float</code>还是<code>double</code>，都只能存储一个<code>0.1</code>的近似值。但是，<code>0.5</code>这个浮点数又可以精确地表示。</p><p>因为浮点数常常无法精确表示，因此，浮点数运算会产生误差：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 浮点数运算误差</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">double</span> <span class="hljs-variable">x</span> <span class="hljs-operator">=</span> <span class="hljs-number">1.0</span> / <span class="hljs-number">10</span>;<br>        <span class="hljs-type">double</span> <span class="hljs-variable">y</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span> - <span class="hljs-number">9.0</span> / <span class="hljs-number">10</span>;<br>        <span class="hljs-comment">// 观察x和y是否相等:</span><br>        System.out.println(x);<br>        System.out.println(y);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>由于浮点数存在运算误差，所以比较两个浮点数是否相等常常会出现错误的结果。正确的比较方法是判断两个浮点数之差的绝对值是否小于一个很小的数：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 比较x和y是否相等，先计算其差的绝对值:</span><br><span class="hljs-type">double</span> <span class="hljs-variable">r</span> <span class="hljs-operator">=</span> Math.abs(x - y);<br><span class="hljs-comment">// 再判断绝对值是否足够小:</span><br><span class="hljs-keyword">if</span> (r &lt; <span class="hljs-number">0.00001</span>) &#123;<br>    <span class="hljs-comment">// 可以认为相等</span><br>&#125; <span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-comment">// 不相等</span><br>&#125;<br></code></pre></td></tr></table></figure><p>浮点数在内存的表示方法和整数比更加复杂。Java的浮点数完全遵循<a href="https://standards.ieee.org/ieee/754/6210/">IEEE-754</a>标准，这也是绝大多数计算机平台都支持的浮点数标准表示方法。</p><hr><h3 id="类型提升"><a href="#类型提升" class="headerlink" title="类型提升"></a>类型提升</h3><p>如果参与运算的两个数其中一个是整型，那么整型可以自动提升到浮点型：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 类型提升</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">n</span> <span class="hljs-operator">=</span> <span class="hljs-number">5</span>;<br>        <span class="hljs-type">double</span> <span class="hljs-variable">d</span> <span class="hljs-operator">=</span> <span class="hljs-number">1.2</span> + <span class="hljs-number">24.0</span> / n; <span class="hljs-comment">// 6.0</span><br>        System.out.println(d);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>需要特别注意，在一个复杂的四则运算中，两个整数的运算不会出现自动提升的情况。例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">double</span> <span class="hljs-variable">d</span> <span class="hljs-operator">=</span> <span class="hljs-number">1.2</span> + <span class="hljs-number">24</span> / <span class="hljs-number">5</span>; <span class="hljs-comment">// 结果不是 6.0 而是 5.2</span><br></code></pre></td></tr></table></figure><p>计算结果为<code>5.2</code>，原因是编译器计算<code>24 / 5</code>这个子表达式时，按两个整数进行运算，结果仍为整数<code>4</code>。<br>要修复这个计算结果，可以将<code>24 / 5</code>改为<code>24.0 / 5</code>。由于<code>24.0</code>是浮点数，因此，计算除法时自动将<code>5</code>提升为浮点数。</p><hr><h3 id="溢出"><a href="#溢出" class="headerlink" title="溢出"></a>溢出</h3><p>整数运算在除数为<code>0</code>时会报错，而浮点数运算在除数为<code>0</code>时，不会报错，但会返回几个特殊值：</p><ul><li><code>NaN</code>表示Not a Number</li><li><code>Infinity</code>表示无穷大</li><li><code>-Infinity</code>表示负无穷大</li></ul><p>例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">double</span> <span class="hljs-variable">d1</span> <span class="hljs-operator">=</span> <span class="hljs-number">0.0</span> / <span class="hljs-number">0</span>; <span class="hljs-comment">// NaN</span><br><span class="hljs-type">double</span> <span class="hljs-variable">d2</span> <span class="hljs-operator">=</span> <span class="hljs-number">1.0</span> / <span class="hljs-number">0</span>; <span class="hljs-comment">// Infinity</span><br><span class="hljs-type">double</span> <span class="hljs-variable">d3</span> <span class="hljs-operator">=</span> -<span class="hljs-number">1.0</span> / <span class="hljs-number">0</span>; <span class="hljs-comment">// -Infinity</span><br></code></pre></td></tr></table></figure><p>这三种特殊值在实际运算中很少碰到，我们只需要了解即可，开发的时候避免与0计算。</p><hr><h3 id="强制转型"><a href="#强制转型" class="headerlink" title="强制转型"></a>强制转型</h3><p>可以将浮点数强制转型为整数。在转型时，浮点数的小数部分会被丢掉。如果转型后超过了整型能表示的最大范围，将返回整型的最大值。例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span> <span class="hljs-variable">n1</span> <span class="hljs-operator">=</span> (<span class="hljs-type">int</span>) <span class="hljs-number">12.3</span>; <span class="hljs-comment">// 12</span><br><span class="hljs-type">int</span> <span class="hljs-variable">n2</span> <span class="hljs-operator">=</span> (<span class="hljs-type">int</span>) <span class="hljs-number">12.7</span>; <span class="hljs-comment">// 12</span><br><span class="hljs-type">int</span> <span class="hljs-variable">n2</span> <span class="hljs-operator">=</span> (<span class="hljs-type">int</span>) -<span class="hljs-number">12.7</span>; <span class="hljs-comment">// -12</span><br><span class="hljs-type">int</span> <span class="hljs-variable">n3</span> <span class="hljs-operator">=</span> (<span class="hljs-type">int</span>) (<span class="hljs-number">12.7</span> + <span class="hljs-number">0.5</span>); <span class="hljs-comment">// 13</span><br><span class="hljs-type">int</span> <span class="hljs-variable">n4</span> <span class="hljs-operator">=</span> (<span class="hljs-type">int</span>) <span class="hljs-number">1.2e20</span>; <span class="hljs-comment">// 2147483647</span><br></code></pre></td></tr></table></figure><p>如果要进行四舍五入，可以对浮点数加上0.5再强制转型：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 四舍五入</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">double</span> <span class="hljs-variable">d</span> <span class="hljs-operator">=</span> <span class="hljs-number">2.6</span>;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">n</span> <span class="hljs-operator">=</span> (<span class="hljs-type">int</span>) (d + <span class="hljs-number">0.5</span>);<br>        System.out.println(n);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><hr><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>浮点数常常无法精确表示，并且浮点数的运算结果可能有误差；</p><p>比较两个浮点数通常比较它们的差的绝对值是否小于一个特定值；</p><p>整型和浮点型运算时，整型会自动提升为浮点型；</p><p>可以将浮点型强制转为整型，但超出范围后将始终返回整型的最大值。</p>]]></content>
    
    
    <categories>
      
      <category>编程语言</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>Java基础</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java整数运算</title>
    <link href="/blog/2024/08/6fc45ebe24a7.html"/>
    <url>/blog/2024/08/6fc45ebe24a7.html</url>
    
    <content type="html"><![CDATA[<p>Java的整数运算遵循四则运算规则，可以使用任意嵌套的小括号。四则运算规则和初等数学一致。例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 四则运算</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> (<span class="hljs-number">100</span> + <span class="hljs-number">200</span>) * (<span class="hljs-number">99</span> - <span class="hljs-number">88</span>); <span class="hljs-comment">// 3300</span><br>        <span class="hljs-type">int</span> <span class="hljs-variable">n</span> <span class="hljs-operator">=</span> <span class="hljs-number">7</span> * (<span class="hljs-number">5</span> + (i - <span class="hljs-number">9</span>)); <span class="hljs-comment">// 23072</span><br>        System.out.println(i);<br>        System.out.println(n);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>整数的数值表示不但是精确的，而且整数运算永远是精确的，即使是除法也是精确的，因为两个整数相除只能得到结果的整数部分：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span> <span class="hljs-variable">x</span> <span class="hljs-operator">=</span> <span class="hljs-number">12345</span> / <span class="hljs-number">67</span>; <span class="hljs-comment">// 184</span><br></code></pre></td></tr></table></figure><p>求余运算使用<code>%</code>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span> <span class="hljs-variable">y</span> <span class="hljs-operator">=</span> <span class="hljs-number">12345</span> % <span class="hljs-number">67</span>; <span class="hljs-comment">// 12345÷67的余数是17</span><br></code></pre></td></tr></table></figure><p>特别注意：整数的除法对于除数为0时运行时将报错，但编译不会报错。</p><hr><h3 id="溢出"><a href="#溢出" class="headerlink" title="溢出"></a>溢出</h3><p>要特别注意，整数由于存在范围限制，如果计算结果超出了范围，就会产生溢出，而溢出<em><strong>不会报错</strong></em> ，却会得到一个奇怪的结果：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 运算溢出</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">x</span> <span class="hljs-operator">=</span> <span class="hljs-number">2147483640</span>;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">y</span> <span class="hljs-operator">=</span> <span class="hljs-number">15</span>;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">sum</span> <span class="hljs-operator">=</span> x + y;<br>        System.out.println(sum); <span class="hljs-comment">// -2147483641</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>要解释上述结果，我们把整数<code>2147483640</code>和<code>15</code>换成二进制做加法：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml">  <span class="hljs-number">0111 </span><span class="hljs-number">1111 </span><span class="hljs-number">1111 </span><span class="hljs-number">1111 </span><span class="hljs-number">1111 </span><span class="hljs-number">1111 </span><span class="hljs-number">1111 </span><span class="hljs-number">1000</span><br><span class="hljs-string">+</span> <span class="hljs-number">0000 </span><span class="hljs-number">0000 </span><span class="hljs-number">0000 </span><span class="hljs-number">0000 </span><span class="hljs-number">0000 </span><span class="hljs-number">0000 </span><span class="hljs-number">0000 </span><span class="hljs-number">1111</span><br><span class="hljs-string">-----------------------------------------</span><br>  <span class="hljs-number">1000 </span><span class="hljs-number">0000 </span><span class="hljs-number">0000 </span><span class="hljs-number">0000 </span><span class="hljs-number">0000 </span><span class="hljs-number">0000 </span><span class="hljs-number">0000 </span><span class="hljs-number">0111</span><br></code></pre></td></tr></table></figure><p>由于最高位计算结果为<code>1</code>，因此，加法结果变成了一个负数。</p><p>要解决上面的问题，可以把<code>int</code>换成<code>long</code>类型，由于<code>long</code>可表示的整型范围更大，所以结果就不会溢出：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">long</span> <span class="hljs-variable">x</span> <span class="hljs-operator">=</span> <span class="hljs-number">2147483640</span>;<br><span class="hljs-type">long</span> <span class="hljs-variable">y</span> <span class="hljs-operator">=</span> <span class="hljs-number">15</span>;<br><span class="hljs-type">long</span> <span class="hljs-variable">sum</span> <span class="hljs-operator">=</span> x + y;<br>System.out.println(sum); <span class="hljs-comment">// 2147483655</span><br></code></pre></td></tr></table></figure><p>还有一种简写的运算符，即<code>+=</code>，<code>-=</code>，<code>*=</code>，<code>/=</code>，它们的使用方法如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java">n += <span class="hljs-number">100</span>; <span class="hljs-comment">// 3409, 相当于 n = n + 100;</span><br>n -= <span class="hljs-number">100</span>; <span class="hljs-comment">// 3309, 相当于 n = n - 100;</span><br></code></pre></td></tr></table></figure><hr><h3 id="自增-自减"><a href="#自增-自减" class="headerlink" title="自增&#x2F;自减"></a>自增&#x2F;自减</h3><p>Java还提供了<code>++</code>运算和<code>--</code>运算，它们可以对一个整数进行加1和减1的操作：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 自增/自减运算</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">n</span> <span class="hljs-operator">=</span> <span class="hljs-number">3300</span>;<br>        n++; <span class="hljs-comment">// 3301, 相当于 n = n + 1;</span><br>        n--; <span class="hljs-comment">// 3300, 相当于 n = n - 1;</span><br>        <span class="hljs-type">int</span> <span class="hljs-variable">y</span> <span class="hljs-operator">=</span> <span class="hljs-number">100</span> + (++n); <span class="hljs-comment">// 不要这么写</span><br>        System.out.println(y);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>注意<code>++</code>写在前面和后面计算结果是不同的，<code>++n</code>表示先加1再引用n，<code>n++</code>表示先引用n再加1。不建议把<code>++</code>运算混入到常规运算中，容易自己把自己搞懵了。</p><hr><h3 id="移位运算"><a href="#移位运算" class="headerlink" title="移位运算"></a>移位运算</h3><p>在计算机中，整数总是以二进制的形式表示。例如，<code>int</code>类型的整数<code>7</code>使用4字节表示的二进制如下：</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">00000000 </span><span class="hljs-number">0000000</span> <span class="hljs-number">0000000</span> <span class="hljs-number">00000111</span><br></code></pre></td></tr></table></figure><p>可以对整数进行移位运算。对整数<code>7</code>左移1位将得到整数<code>14</code>，左移两位将得到整数<code>28</code>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span> <span class="hljs-variable">n</span> <span class="hljs-operator">=</span> <span class="hljs-number">7</span>;       <span class="hljs-comment">// 00000000 00000000 00000000 00000111 = 7</span><br><span class="hljs-type">int</span> <span class="hljs-variable">a</span> <span class="hljs-operator">=</span> n &lt;&lt; <span class="hljs-number">1</span>;  <span class="hljs-comment">// 00000000 00000000 00000000 00001110 = 14</span><br><span class="hljs-type">int</span> <span class="hljs-variable">b</span> <span class="hljs-operator">=</span> n &lt;&lt; <span class="hljs-number">2</span>;  <span class="hljs-comment">// 00000000 00000000 00000000 00011100 = 28</span><br><span class="hljs-type">int</span> <span class="hljs-variable">c</span> <span class="hljs-operator">=</span> n &lt;&lt; <span class="hljs-number">28</span>; <span class="hljs-comment">// 01110000 00000000 00000000 00000000 = 1879048192</span><br><span class="hljs-type">int</span> <span class="hljs-variable">d</span> <span class="hljs-operator">=</span> n &lt;&lt; <span class="hljs-number">29</span>; <span class="hljs-comment">// 11100000 00000000 00000000 00000000 = -536870912</span><br></code></pre></td></tr></table></figure><p>左移29位时，由于最高位变成<code>1</code>，因此结果变成了负数。</p><p>类似的，对整数28进行右移，结果如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span> <span class="hljs-variable">n</span> <span class="hljs-operator">=</span> <span class="hljs-number">7</span>;       <span class="hljs-comment">// 00000000 00000000 00000000 00000111 = 7</span><br><span class="hljs-type">int</span> <span class="hljs-variable">a</span> <span class="hljs-operator">=</span> n &gt;&gt; <span class="hljs-number">1</span>;  <span class="hljs-comment">// 00000000 00000000 00000000 00000011 = 3</span><br><span class="hljs-type">int</span> <span class="hljs-variable">b</span> <span class="hljs-operator">=</span> n &gt;&gt; <span class="hljs-number">2</span>;  <span class="hljs-comment">// 00000000 00000000 00000000 00000001 = 1</span><br><span class="hljs-type">int</span> <span class="hljs-variable">c</span> <span class="hljs-operator">=</span> n &gt;&gt; <span class="hljs-number">3</span>;  <span class="hljs-comment">// 00000000 00000000 00000000 00000000 = 0</span><br></code></pre></td></tr></table></figure><p>如果对一个负数进行右移，最高位的<code>1</code>不动，结果仍然是一个负数：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span> <span class="hljs-variable">n</span> <span class="hljs-operator">=</span> -<span class="hljs-number">536870912</span>;<br><span class="hljs-type">int</span> <span class="hljs-variable">a</span> <span class="hljs-operator">=</span> n &gt;&gt; <span class="hljs-number">1</span>;  <span class="hljs-comment">// 11110000 00000000 00000000 00000000 = -268435456</span><br><span class="hljs-type">int</span> <span class="hljs-variable">b</span> <span class="hljs-operator">=</span> n &gt;&gt; <span class="hljs-number">2</span>;  <span class="hljs-comment">// 11111000 00000000 00000000 00000000 = -134217728</span><br><span class="hljs-type">int</span> <span class="hljs-variable">c</span> <span class="hljs-operator">=</span> n &gt;&gt; <span class="hljs-number">28</span>; <span class="hljs-comment">// 11111111 11111111 11111111 11111110 = -2</span><br><span class="hljs-type">int</span> <span class="hljs-variable">d</span> <span class="hljs-operator">=</span> n &gt;&gt; <span class="hljs-number">29</span>; <span class="hljs-comment">// 11111111 11111111 11111111 11111111 = -1</span><br></code></pre></td></tr></table></figure><p>还有一种无符号的右移运算，使用<code>&gt;&gt;&gt;</code>，它的特点是不管符号位，右移后高位总是补<code>0</code>，因此，对一个负数进行<code>&gt;&gt;&gt;</code>右移，它会变成正数，原因是最高位的<code>1</code>变成了<code>0</code>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span> <span class="hljs-variable">n</span> <span class="hljs-operator">=</span> -<span class="hljs-number">536870912</span>;<br><span class="hljs-type">int</span> <span class="hljs-variable">a</span> <span class="hljs-operator">=</span> n &gt;&gt;&gt; <span class="hljs-number">1</span>;  <span class="hljs-comment">// 01110000 00000000 00000000 00000000 = 1879048192</span><br><span class="hljs-type">int</span> <span class="hljs-variable">b</span> <span class="hljs-operator">=</span> n &gt;&gt;&gt; <span class="hljs-number">2</span>;  <span class="hljs-comment">// 00111000 00000000 00000000 00000000 = 939524096</span><br><span class="hljs-type">int</span> <span class="hljs-variable">c</span> <span class="hljs-operator">=</span> n &gt;&gt;&gt; <span class="hljs-number">29</span>; <span class="hljs-comment">// 00000000 00000000 00000000 00000111 = 7</span><br><span class="hljs-type">int</span> <span class="hljs-variable">d</span> <span class="hljs-operator">=</span> n &gt;&gt;&gt; <span class="hljs-number">31</span>; <span class="hljs-comment">// 00000000 00000000 00000000 00000001 = 1</span><br></code></pre></td></tr></table></figure><hr><h3 id="位运算"><a href="#位运算" class="headerlink" title="位运算"></a>位运算</h3><p>位运算是按位进行与、或、非和异或的运算。<br>与运算的规则是，必须两个数同时为<code>1</code>，结果才为<code>1</code>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java">n = <span class="hljs-number">0</span> &amp; <span class="hljs-number">0</span>; <span class="hljs-comment">// 0</span><br>n = <span class="hljs-number">0</span> &amp; <span class="hljs-number">1</span>; <span class="hljs-comment">// 0</span><br>n = <span class="hljs-number">1</span> &amp; <span class="hljs-number">0</span>; <span class="hljs-comment">// 0</span><br>n = <span class="hljs-number">1</span> &amp; <span class="hljs-number">1</span>; <span class="hljs-comment">// 1</span><br></code></pre></td></tr></table></figure><p>或运算的规则是，只要任意一个为<code>1</code>，结果就为<code>1</code>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java">n = <span class="hljs-number">0</span> | <span class="hljs-number">0</span>; <span class="hljs-comment">// 0</span><br>n = <span class="hljs-number">0</span> | <span class="hljs-number">1</span>; <span class="hljs-comment">// 1</span><br>n = <span class="hljs-number">1</span> | <span class="hljs-number">0</span>; <span class="hljs-comment">// 1</span><br>n = <span class="hljs-number">1</span> | <span class="hljs-number">1</span>; <span class="hljs-comment">// 1</span><br></code></pre></td></tr></table></figure><p>非运算的规则是，<code>0</code>和<code>1</code>互换：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java">n = ~<span class="hljs-number">0</span>; <span class="hljs-comment">// 1</span><br>n = ~<span class="hljs-number">1</span>; <span class="hljs-comment">// 0</span><br></code></pre></td></tr></table></figure><p>异或运算的规则是，如果两个数不同，结果为<code>1</code>，否则为<code>0</code>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java">n = <span class="hljs-number">0</span> ^ <span class="hljs-number">0</span>; <span class="hljs-comment">// 0</span><br>n = <span class="hljs-number">0</span> ^ <span class="hljs-number">1</span>; <span class="hljs-comment">// 1</span><br>n = <span class="hljs-number">1</span> ^ <span class="hljs-number">0</span>; <span class="hljs-comment">// 1</span><br>n = <span class="hljs-number">1</span> ^ <span class="hljs-number">1</span>; <span class="hljs-comment">// 0</span><br></code></pre></td></tr></table></figure><p>对两个整数进行位运算，实际上就是按位对齐，然后依次对每一位进行运算。例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 位运算</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">167776589</span>; <span class="hljs-comment">// 00001010 00000000 00010001 01001101</span><br>        <span class="hljs-type">int</span> <span class="hljs-variable">n</span> <span class="hljs-operator">=</span> <span class="hljs-number">167776512</span>; <span class="hljs-comment">// 00001010 00000000 00010001 00000000</span><br>        System.out.println(i &amp; n); <span class="hljs-comment">// 167776512</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>上述按位与运算实际上可以看作两个整数表示的IP地址<code>10.0.17.77</code>和<code>10.0.17.0</code>，通过与运算，可以快速判断一个IP是否在给定的网段内。</p><hr><h3 id="运算优先级"><a href="#运算优先级" class="headerlink" title="运算优先级"></a>运算优先级</h3><p>在Java的计算表达式中，运算优先级从高到低依次是：</p><ul><li><code>()</code></li><li><code>!</code> <code>~</code> <code>++</code> <code>--</code></li><li><code>*</code> <code>/</code> <code>%</code></li><li><code>+</code> <code>-</code></li><li><code>&lt;&lt;</code> <code>&gt;&gt;</code> <code>&gt;&gt;&gt;</code></li><li><code>&amp;</code></li><li><code>|</code></li><li><code>+=</code> <code>-=</code> <code>*=</code> <code>/=</code><br>记不住也没关系，只需要加括号就可以保证运算的优先级正确。</li></ul><hr><h3 id="类型自动提升与强制转型"><a href="#类型自动提升与强制转型" class="headerlink" title="类型自动提升与强制转型"></a>类型自动提升与强制转型</h3><p>在运算过程中，如果参与运算的两个数类型不一致，那么计算结果为较大类型的整型。例如，<code>short</code>和<code>int</code>计算，结果总是<code>int</code>，原因是<code>short</code>首先自动被转型为<code>int</code>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 类型自动提升与强制转型</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">short</span> <span class="hljs-variable">s</span> <span class="hljs-operator">=</span> <span class="hljs-number">1234</span>;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">123456</span>;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">x</span> <span class="hljs-operator">=</span> s + i; <span class="hljs-comment">// s自动转型为int</span><br>        <span class="hljs-type">short</span> <span class="hljs-variable">y</span> <span class="hljs-operator">=</span> s + i; <span class="hljs-comment">// 编译错误!</span><br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>也可以将结果强制转型，即将大范围的整数转型为小范围的整数。强制转型使用<code>(类型)</code>，例如，将<code>int</code>强制转型为<code>short</code>：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">12345</span>;<br><span class="hljs-type">short</span> <span class="hljs-variable">s</span> <span class="hljs-operator">=</span> (<span class="hljs-type">short</span>) i; <span class="hljs-comment">// 12345</span><br></code></pre></td></tr></table></figure><p>要注意，超出范围的强制转型会得到错误的结果，原因是转型时，<code>int</code>的两个高位字节直接被扔掉，仅保留了低位的两个字节：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 强制转型</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">int</span> <span class="hljs-variable">i1</span> <span class="hljs-operator">=</span> <span class="hljs-number">1234567</span>;<br>        <span class="hljs-type">short</span> <span class="hljs-variable">s1</span> <span class="hljs-operator">=</span> (<span class="hljs-type">short</span>) i1; <span class="hljs-comment">// -10617</span><br>        System.out.println(s1);<br>        <span class="hljs-type">int</span> <span class="hljs-variable">i2</span> <span class="hljs-operator">=</span> <span class="hljs-number">12345678</span>;<br>        <span class="hljs-type">short</span> <span class="hljs-variable">s2</span> <span class="hljs-operator">=</span> (<span class="hljs-type">short</span>) i2; <span class="hljs-comment">// 24910</span><br>        System.out.println(s2);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>因此，强制转型的结果很可能是错的。</p><hr><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>整数运算的结果永远是精确的；</p><p>运算结果会自动提升；</p><p>可以强制转型，但超出范围的强制转型会得到错误的结果；</p><p>应该选择合适范围的整型（<code>int</code>或<code>long</code>），没有必要为了节省内存而使用<code>byte</code>和<code>short</code>进行整数运算。</p>]]></content>
    
    
    <categories>
      
      <category>编程语言</category>
      
      <category>Java</category>
      
      <category>Java基础</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java</tag>
      
      <tag>Java基础</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux安装JDK21环境</title>
    <link href="/blog/2024/08/65ebbba07cbb.html"/>
    <url>/blog/2024/08/65ebbba07cbb.html</url>
    
    <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>Java 21 是长期支持版本，Oracle 将至少提供 8 年支持。</p><hr><h4 id="环境检查"><a href="#环境检查" class="headerlink" title="环境检查"></a>环境检查</h4><p>我的系统是 <code>CentOS Linux 7 (Core)</code> x64 架构，需要下载对应的架构的版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://download.oracle.com/java/21/latest/jdk-21_linux-x64_bin.tar.gz<br></code></pre></td></tr></table></figure><hr><h4 id="卸载Java-环境"><a href="#卸载Java-环境" class="headerlink" title="卸载Java 环境"></a>卸载Java 环境</h4><h5 id="RPM方式卸载Java环境"><a href="#RPM方式卸载Java环境" class="headerlink" title="RPM方式卸载Java环境"></a>RPM方式卸载Java环境</h5><ol><li>rpm查询java安装包名称（注：rpm -qa 列举出所有RPM安装的包）<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">rpm -qa | grep <span class="hljs-string">&#x27;java\|jdk\|gcj\|jre&#x27;</span><br></code></pre></td></tr></table></figure></li><li>卸载查询出来的所有安装包名称（注：rpm -e –nodeps 是RPM卸载命令）<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 执行卸载命令（查询出来什么就卸载什么）</span><br>rpm -e --nodeps jdk-1.8-1.8.0_381-9.x86_64<br></code></pre></td></tr></table></figure></li><li>补充 前面可以查询安装包安装到系统的文件位置（rpm -ql 安装包名称）<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">rpm -ql jdk-1.8-1.8.0_381-9.x86_64<br></code></pre></td></tr></table></figure></li></ol><h5 id="yum方式卸载Java环境："><a href="#yum方式卸载Java环境：" class="headerlink" title="yum方式卸载Java环境："></a>yum方式卸载Java环境：</h5><ol><li>yum查询Java安装的环境信息（注：yum list installed 列举所有安装的服务）<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">yum list installed | grep <span class="hljs-string">&#x27;java\|jdk\|gcj\|jre&#x27;</span><br></code></pre></td></tr></table></figure></li><li>卸载查询出来的所有安装信息（注：yum -y remove 是yum卸载命令）<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 执行卸载命令（查询出来什么就卸载什么）</span><br>yum -y remove jdk-1.8.x86_64<br></code></pre></td></tr></table></figure></li></ol><h5 id="tar-gz方式安装后的卸载："><a href="#tar-gz方式安装后的卸载：" class="headerlink" title="tar.gz方式安装后的卸载："></a>tar.gz方式安装后的卸载：</h5><ol><li>删除之前的解压文件位置（如下是我的文件位置）<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">rm</span> -rf /usr/local/java/jdk1.8.0_381/<br></code></pre></td></tr></table></figure></li><li>剔除之前配置的 &#x2F;etc&#x2F;profile 下的配置信息，如下示例：<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">## 剔除这些配置信息</span><br><span class="hljs-comment">###JAVA###</span><br>JAVA_HOME=<span class="hljs-string">&quot;/usr/local/java/jdk1.8.0_381&quot;</span><br>JRE_HOME=<span class="hljs-string">&quot;/usr/local/java/jdk1.8.0_381/jre&quot;</span><br>PATH=<span class="hljs-variable">$JRE_HOME</span>/bin:<span class="hljs-variable">$JAVA_HOME</span>/bin:<span class="hljs-variable">$PATH</span><br>CLASSPATH=.:<span class="hljs-variable">$JAVA_HOME</span>/lib/dt.jar:<span class="hljs-variable">$JAVA_HOME</span>/lib/tools.jar<br><span class="hljs-built_in">export</span> JAVA_HOME JRE_HOME PATH CLASSPATH<br></code></pre></td></tr></table></figure></li><li>删除配置生效<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">source</span> /etc/profile<br></code></pre></td></tr></table></figure></li></ol><hr><h4 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h4><p><a href="https://www.oracle.com/cn/java/technologies/downloads/#java21">Java Downloads | Oracle 中国</a><br><a href="https://www.cnblogs.com/antLaddie/p/17599359.html">Linux下安装Java环境三种方式（tar.gz、rpm、yum） - 蚂蚁小哥 - 博客园 (cnblogs.com)</a></p><hr><h3 id="安装Java运行环境"><a href="#安装Java运行环境" class="headerlink" title="安装Java运行环境"></a>安装Java运行环境</h3><h4 id="压缩包手动安装（推荐）"><a href="#压缩包手动安装（推荐）" class="headerlink" title="压缩包手动安装（推荐）"></a>压缩包手动安装（推荐）</h4><ol><li>下载 (当前最新版本是 jdk-21.0.4)<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">wget https://download.oracle.com/java/21/latest/jdk-21_linux-x64_bin.tar.gz<br></code></pre></td></tr></table></figure></li><li>解压<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">tar -zxvf jdk-21_linux-x64_bin.tar.gz<br></code></pre></td></tr></table></figure></li><li>剪切到指定目录<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">mkdir</span> -p /usr/local/java/<br><span class="hljs-built_in">mv</span> jdk-21.0.4 /usr/local/java/<br></code></pre></td></tr></table></figure></li><li>检查Java解压是否可用<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">/usr/local/java/jdk-21.0.4/bin/java -version<br>/usr/local/java/jdk-21.0.4/bin/javac -version<br></code></pre></td></tr></table></figure></li></ol><hr><h5 id="配置Java环境变量"><a href="#配置Java环境变量" class="headerlink" title="配置Java环境变量"></a>配置Java环境变量</h5><ol><li>手动配置Java环境变量（因为系统不知道我们java解压在哪）<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">vi /etc/profile<br></code></pre></td></tr></table></figure></li><li>配置信息<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-comment">###JAVA###</span><br>JAVA_HOME=<span class="hljs-string">&quot;/usr/local/java/jdk-21.0.4&quot;</span><br>PATH=<span class="hljs-variable">$JAVA_HOME</span>/bin:<span class="hljs-variable">$PATH</span><br>CLASSPATH=.:<span class="hljs-variable">$JAVA_HOME</span>/lib/dt.jar:<span class="hljs-variable">$JAVA_HOME</span>/lib/tools.jar<br><span class="hljs-built_in">export</span> JAVA_HOME PATH CLASSPATH<br></code></pre></td></tr></table></figure></li><li>让配置立即生效<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">source</span> /etc/profile<br></code></pre></td></tr></table></figure></li><li>检查Java环境是否成功安装<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">java -version<br></code></pre></td></tr></table></figure></li><li>查看JDK的安装路径（安装后才有）<figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">which</span> java<br></code></pre></td></tr></table></figure></li></ol><blockquote><p>注意:<br>若yum安装则默认Java被安装在 “ &#x2F;usr&#x2F;lib&#x2F;jvm ”（一般不用手动配置）<br>若RPM安装则默认Java被安装在 “ &#x2F;usr&#x2F;java&#x2F;jdk1.8.0-x64 ”（一般不用手动配置）</p></blockquote><hr>]]></content>
    
    
    <categories>
      
      <category>编程语言</category>
      
      <category>Java</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>Java</tag>
      
      <tag>编程语言</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux安装部署Redis</title>
    <link href="/blog/2024/08/03751abecf4d.html"/>
    <url>/blog/2024/08/03751abecf4d.html</url>
    
    <content type="html"><![CDATA[<h4 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h4><p>该安装是从Redis 源码编译安装到 Linux 系统，需要C的编译环境，还需要 libc 包，当前安装的Redis版本是redis-stable 7.4.0。</p><hr><h5 id="环境检查"><a href="#环境检查" class="headerlink" title="环境检查"></a>环境检查</h5><p>使用命令查看linux信息，我的系统是 <code>CentOS Linux 7 (Core)</code><br>要在 CentOS 7 上检查是否具备编译 Redis 所需的 C 编译器（GCC）和 libc 环境，你可以按照以下步骤进行操作：</p><ol><li><p><strong>检查 GCC 版本</strong><br>首先，你需要确认系统上是否已经安装了 GCC（GNU Compiler Collection）。如果已安装，你可以使用以下命令来查看 GCC 的版本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">gcc --version<br></code></pre></td></tr></table></figure><p>如果命令返回了版本信息，那么说明 GCC 已经安装好了。如果没有安装或未找到 GCC，你需要安装它。在 CentOS 7 上，你可以使用 yum 包管理器来安装 GCC：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo yum install gcc<br></code></pre></td></tr></table></figure></li><li><p><strong>检查 libc</strong><br>libc 是 C 标准库的一部分，通常与 GCC 一起安装。你不需要单独安装 libc，因为它通常是系统默认的一部分。如果你想要确认 libc 的版本，你可以查看 glibc 的版本。在 CentOS 7 中，glibc 的版本可以通过以下命令获取：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ldd --version<br></code></pre></td></tr></table></figure><p>这会显示 ld-linux-x86-64.so.2 或 ld-linux.so.2 的版本，它们是 glibc 的一部分。</p></li><li><p><strong>检查必要的开发工具</strong><br>为了确保编译过程顺利，你还需要安装一些基本的开发工具，例如 make 和 autoconf。你可以使用以下命令来安装它们：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo yum install make autoconf<br></code></pre></td></tr></table></figure></li><li><p><strong>验证编译环境</strong><br>最后，你可以尝试编译一个小的 C 程序来验证编译环境是否正确设置。创建一个名为 hello.c 的文件，并写入以下内容：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;Hello, World!\n&quot;</span>);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>然后，编译并运行这个程序：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">gcc hello.c -o hello<br>./hello<br></code></pre></td></tr></table></figure><p>如果一切正常，你应该能看到 “Hello, World!” 的输出。<br>通过上述步骤，你可以确认你的 CentOS 7 系统是否具备了编译 Redis 所需的基本编译环境。</p></li></ol><hr><h5 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h5><ul><li><a href="https://redis.io/docs/latest/operate/oss_and_stack/install/install-redis/install-redis-from-source/">Install Redis from Source | Docs</a></li><li><a href="https://github.com/redis/redis-hashes">redis&#x2F;redis-hashes: Redis tarball SHA1 hashes (github.com)</a></li><li><a href="https://www.cnblogs.com/hunanzp/p/12304622.html">Linux安装部署Redis(超级详细) - 长沙大鹏 - 博客园 (cnblogs.com)</a></li><li><a href="https://raw.githubusercontent.com/redis/redis/unstable/redis.conf">raw.githubusercontent.com&#x2F;redis&#x2F;redis&#x2F;unstable&#x2F;redis.conf</a></li></ul><hr><h4 id="下载Redis"><a href="#下载Redis" class="headerlink" title="下载Redis"></a>下载Redis</h4><p>Redis 的源代码文件可以从下载页面获得。你可以通过与 <a href="https://github.com/redis/redis-hashes">redis-hashes</a> Git 仓库中的摘要进行比较来验证这些下载文件的完整性<br><a href="https://github.com/redis/redis-hashes">redis&#x2F;redis-hashes</a></p><p>要从 Redis 的下载站点获取最新稳定版本的源代码文件，请运行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">wget https://download.redis.io/redis-stable.tar.gz<br><span class="hljs-comment"># 或者</span><br>wget http://download.redis.io/releases/redis-7.4.0.tar.gz<br></code></pre></td></tr></table></figure><hr><h4 id="解压并安装Redis"><a href="#解压并安装Redis" class="headerlink" title="解压并安装Redis"></a>解压并安装Redis</h4><ol><li><p>解压</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">tar -xzvf redis-stable.tar.gz<br></code></pre></td></tr></table></figure></li><li><p>移动redis目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mv</span> /data/yunwei/redis-stable /usr/local/redis7<br><span class="hljs-built_in">cd</span> /usr/local/redis7<br></code></pre></td></tr></table></figure></li><li><p>编译</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">make<br></code></pre></td></tr></table></figure></li><li><p>安装<br>这里多了一个关键字 <strong><code>PREFIX=</code></strong> 这个关键字的作用是编译的时候用于指定程序存放的路径。比如我们现在就是指定了redis必须存放在&#x2F;usr&#x2F;local&#x2F;redis目录。假设不添加该关键字Linux会将可执行文件存放在&#x2F;usr&#x2F;local&#x2F;bin目录，</p></li></ol><p>库文件会存放在&#x2F;usr&#x2F;local&#x2F;lib目录。配置文件会存放在&#x2F;usr&#x2F;local&#x2F;etc目录。其他的资源文件会存放在usr&#x2F;local&#x2F;share目录。这里指定号目录也方便后续的卸载，后续直接rm -rf &#x2F;usr&#x2F;local&#x2F;redis 即可删除redis。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> make PREFIX=/usr/local/redis7 install<br></code></pre></td></tr></table></figure><ol start="5"><li>启动redis，是否正常启动，Ctrl-C 关闭程序<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">./bin/redis-server ./redis.conf<br></code></pre></td></tr></table></figure></li></ol><hr><h4 id="业务配置-学习专用"><a href="#业务配置-学习专用" class="headerlink" title="业务配置(学习专用)"></a>业务配置(学习专用)</h4><ol><li><p>将 redis.conf 配置复制一份</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mkdir</span> -p /data/yunwei/redis7/logs<br><span class="hljs-built_in">cp</span> /usr/local/redis7/redis.conf /data/yunwei/redis7/redis.conf<br></code></pre></td></tr></table></figure></li><li><p>修改配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vi /data/yunwei/redis7/redis.conf<br></code></pre></td></tr></table></figure><p>修改的配置如下<br>通过 &#x2F;daemonize  查找到属性，默认是no，更改为yes即可。 (通过&#x2F;关键字查找出现多个结果则使用 n字符切换到下一个即可，查找到结果后输入:noh退回到正常模式)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs conf"># 守护线程启动<br>daemonize yes<br><br># 监听绑定所有 ipv4 和 ipv6（学习专用配置不建议生产使用）<br>bind * -::*<br><br># 保护模式（学习专用配置不建议生产使用）<br>protected-mode no<br><br># 日志文件路径<br>logfile &quot;/data/yunwei/redis7/logs/redis_6379.log&quot;<br><br># 服务启动pid记录文件路径<br>pidfile /data/yunwei/redis7/redis_6379.pid<br><br># 数据保存的文件名<br>dbfilename dump.rdb<br><br># 数据保存的路径<br>dir /data/yunwei/redis7<br><br># 设置密码<br>requirepass root<br></code></pre></td></tr></table></figure></li><li><p>启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">/usr/local/redis7/bin/redis-server /data/yunwei/redis7/redis.conf<br></code></pre></td></tr></table></figure></li><li><p>检查启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查看程序是否启动</span><br>ps -ef |grep redis<br><br><span class="hljs-comment"># redis 连接</span><br>/usr/local/redis7/bin/redis-cli -h 127.0.0.1 -p 6379<br><span class="hljs-comment"># 连接后输入密码</span><br>auth root<br><span class="hljs-comment"># 查看redis info 信息</span><br>info<br></code></pre></td></tr></table></figure></li></ol><hr><h4 id="防火墙设置"><a href="#防火墙设置" class="headerlink" title="防火墙设置"></a>防火墙设置</h4><p>如果遇到连不上 ，telnet 都连不上对应端口时，可能是linux 开启防火墙了，需要将 6379 添加到防火墙中</p><ol><li><p>telnet 命令，看是否访问的到</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">telnet 192.168.0.106 6379<br></code></pre></td></tr></table></figure></li><li><p>检查防火墙状态</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo systemctl status firewalld<br></code></pre></td></tr></table></figure><p><strong>如果防火墙处于关闭状态，可以跳过此步骤</strong>。如果防火墙处于运行状态，需要开放 <code>MySQL</code> 服务的端口（默认为<code>3306</code>）</p></li><li><p>防火墙开放 MySQL 端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo firewall-cmd --permanent --add-port=6379/tcp<br>sudo firewall-cmd --reload<br></code></pre></td></tr></table></figure></li><li><p>查看指定区域所有打开的端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">firewall-cmd --zone=public --list-ports<br></code></pre></td></tr></table></figure></li></ol><hr><h4 id="配置开机启动"><a href="#配置开机启动" class="headerlink" title="配置开机启动"></a>配置开机启动</h4><ol><li><p>在 &#x2F;etc&#x2F;systemd&#x2F;system&#x2F; 路径下创建 redis6379.service 文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd /etc/systemd/system/<br>vi redis6379.service<br></code></pre></td></tr></table></figure></li><li><p>写入如下内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs bash">[Unit]<br>Description=Redis in-memory data store<br>After=network.target<br><br>[Service]<br>Type=forking<br>ExecStart=/usr/local/redis7/bin/redis-server /data/yunwei/redis7/redis.conf<br>ExecStop=/usr/local/redis7/bin/redis-cli -h 127.0.0.1 -p 6379 -a root shutdown<br>TimeoutStopSec=60s<br>Restart=always<br>RestartSec=10s<br><br>[Install]<br>WantedBy=multi-user.target<br></code></pre></td></tr></table></figure></li><li><p>加载新的服务单元文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">sudo</span> systemctl daemon-reload<br></code></pre></td></tr></table></figure></li><li><p>启动 Redis 服务</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">sudo</span> systemctl start redis6379<br></code></pre></td></tr></table></figure></li><li><p>设置 Redis 服务开机启动</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">sudo</span> systemctl <span class="hljs-built_in">enable</span> redis6379<br></code></pre></td></tr></table></figure></li><li><p>检查 Redis 服务状态</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh"><span class="hljs-built_in">sudo</span> systemctl status redis6379<br></code></pre></td></tr></table></figure></li></ol><hr><h4 id="配置文件信息"><a href="#配置文件信息" class="headerlink" title="配置文件信息"></a>配置文件信息</h4><p>在目录&#x2F;usr&#x2F;local&#x2F;redis下有一个redis.conf的配置文件。我们上面启动方式就是执行了该配置文件的配置运行的。我么可以通过cat、vi、less等Linux内置的读取命令读取该文件。</p><p>也可以通过redis-cli命令进入redis控制台后通过CONFIG GET * 的方式读取所有配置项。 如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">redis-cli<br>CONFIG GET *<br></code></pre></td></tr></table></figure><table><thead><tr><th>配置项名称</th><th>配置项值范围</th><th>说明</th></tr></thead><tbody><tr><td>daemonize</td><td>yes、no</td><td>yes表示启用守护进程，默认是no即不以守护进程方式运行。其中Windows系统下不支持启用守护进程方式运行</td></tr><tr><td>port</td><td></td><td>指定 Redis 监听端口，默认端口为 6379</td></tr><tr><td>bind</td><td></td><td>绑定的主机地址,如果需要设置远程访问则直接将这个属性备注下或者改为bind * 即可,这个属性和下面的protected-mode控制了是否可以远程访问 。</td></tr><tr><td>protected-mode</td><td>yes 、no</td><td>保护模式，该模式控制外部网是否可以连接redis服务，默认是yes,所以默认我们外网是无法访问的，如需外网连接rendis服务则需要将此属性改为no。</td></tr><tr><td>timeout</td><td>300</td><td>当客户端闲置多长时间后关闭连接，如果指定为 0，表示关闭该功能</td></tr><tr><td>loglevel</td><td>debug、verbose、notice、warning</td><td>日志级别，默认为 notice</td></tr><tr><td>databases</td><td>16</td><td>设置数据库的数量，默认的数据库是0。整个通过客户端工具可以看得到</td></tr><tr><td>rdbcompression</td><td>yes、no</td><td>指定存储至本地数据库时是否压缩数据，默认为 yes，Redis 采用 LZF 压缩，如果为了节省 CPU 时间，可以关闭该选项，但会导致数据库文件变的巨大。</td></tr><tr><td>dbfilename</td><td>dump.rdb</td><td>指定本地数据库文件名，默认值为 dump.rdb</td></tr><tr><td>dir</td><td></td><td>指定本地数据库存放目录</td></tr><tr><td>requirepass</td><td></td><td>设置 Redis 连接密码，如果配置了连接密码，客户端在连接 Redis 时需要通过 AUTH <password> 命令提供密码，默认关闭</td></tr><tr><td>maxclients</td><td>0</td><td>设置同一时间最大客户端连接数，默认无限制，Redis 可以同时打开的客户端连接数为 Redis 进程可以打开的最大文件描述符数，如果设置 maxclients 0，表示不作限制。当客户端连接数到达限制时，Redis 会关闭新的连接并向客户端返回 max number of clients reached 错误信息。</td></tr><tr><td>maxmemory</td><td>XXX <bytes></td><td>指定 Redis 最大内存限制，Redis 在启动时会把数据加载到内存中，达到最大内存后，Redis 会先尝试清除已到期或即将到期的 Key，当此方法处理 后，仍然到达最大内存设置，将无法再进行写入操作，但仍然可以进行读取操作。Redis 新的 vm 机制，会把 Key 存放内存，Value 会存放在 swap 区。配置项值范围列里XXX为数值。</td></tr><tr><td>这里我要将daemonize改为yes，不然我每次启动都得在redis-server命令后面加符号&amp;，不这样操作则只要回到Linux控制台则redis服务会自动关闭，同时也将bind注释，将protected-mode设置为no。</td><td></td><td></td></tr><tr><td>这样启动后我就可以在外网访问了。</td><td></td><td></td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">vi /usr/local/redis/redis.conf<br></code></pre></td></tr></table></figure><p>通过 &#x2F;daemonize  查找到属性，默认是no，更改为yes即可。 (通过&#x2F;关键字查找出现多个结果则使用 n字符切换到下一个即可，查找到结果后输入:noh退回到正常模式)</p><hr><h4 id="redis-cli-使用"><a href="#redis-cli-使用" class="headerlink" title="redis-cli 使用"></a>redis-cli 使用</h4><p><code>redis-cli</code>是连接本地redis服务的一个命令，通过该命令后可以既然怒redis的脚本控制台。</p><p>输入exit可以退出redis脚本控制台</p>]]></content>
    
    
    <categories>
      
      <category>开发环境</category>
      
      <category>缓存系统</category>
      
      <category>Redis</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>缓存系统</tag>
      
      <tag>Redis</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux 环境维护</title>
    <link href="/blog/2024/08/d276cb301771.html"/>
    <url>/blog/2024/08/d276cb301771.html</url>
    
    <content type="html"><![CDATA[<h4 id="查看Linux系统信息"><a href="#查看Linux系统信息" class="headerlink" title="查看Linux系统信息"></a>查看Linux系统信息</h4><p>使用命令查看linux信息，我的系统是 <code>CentOS Linux 7 (Core)</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">cat /etc/os-release<br></code></pre></td></tr></table></figure><hr><h4 id="yum-命令问题"><a href="#yum-命令问题" class="headerlink" title="yum 命令问题"></a>yum 命令问题</h4><h5 id="使用阿里云或其他国内镜像源"><a href="#使用阿里云或其他国内镜像源" class="headerlink" title="使用阿里云或其他国内镜像源"></a>使用阿里云或其他国内镜像源</h5><p>如果使用 yum 安装出现类似问题，应该是 CentOS 停止维护了，所以他的网络库已经关掉了，我们把这里换成阿里云镜像库</p><ol><li><p>备份YUM配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo cp /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.back<br></code></pre></td></tr></table></figure></li><li><p>更新YUM仓库源为阿里云镜像源</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo vi /etc/yum.repos.d/CentOS-Base.repo<br></code></pre></td></tr></table></figure></li><li><p>将内容替换成下面</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs shell">[base]<br>name=CentOS-$releasever - Base - mirrors.aliyun.com<br>baseurl=http://mirrors.aliyun.com/centos/$releasever/os/$basearch/<br>gpgcheck=1<br>gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7<br> <br>[updates]<br>name=CentOS-$releasever - Updates - mirrors.aliyun.com<br>baseurl=http://mirrors.aliyun.com/centos/$releasever/updates/$basearch/<br>gpgcheck=1<br>gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7<br> <br>[extras]<br>name=CentOS-$releasever - Extras - mirrors.aliyun.com<br>baseurl=http://mirrors.aliyun.com/centos/$releasever/extras/$basearch/<br>gpgcheck=1<br>gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7<br> <br>[centosplus]<br>name=CentOS-$releasever - Plus - mirrors.aliyun.com<br>baseurl=http://mirrors.aliyun.com/centos/$releasever/centosplus/$basearch/<br>gpgcheck=1<br>enabled=0<br>gpgkey=http://mirrors.aliyun.com/centos/RPM-GPG-KEY-CentOS-7<br></code></pre></td></tr></table></figure></li><li><p>清理并重建缓存</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo yum clean all<br>sudo yum makecache<br>sudo yum update<br></code></pre></td></tr></table></figure></li><li><p>查看yum安装的应用</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">查看所有已安装的</span><br>yum list installed<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">查看gcc安装</span><br>yum list installed |grep gcc<br></code></pre></td></tr></table></figure></li></ol><hr><h4 id="wget-命令问题"><a href="#wget-命令问题" class="headerlink" title="wget 命令问题"></a>wget 命令问题</h4><p>如果没有系统没有 wget 命令 可以使用 yum 安装 wget</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum -y install wget<br></code></pre></td></tr></table></figure><hr><h4 id="lrzsz-命令问题"><a href="#lrzsz-命令问题" class="headerlink" title="lrzsz 命令问题"></a>lrzsz 命令问题</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum -y install lrzsz<br></code></pre></td></tr></table></figure><hr><p>检查是否已经安装过mysql ：    rpm -qa | grep mysql<br>如果环境中有遗留mysql则执行删除命令：rpm -e –nodeps mysql-xxxxxxxxx<br>查询遗留的mysql设置或命令，执行两条命令：<br>whereis mysql<br>find &#x2F; -name mysql</p><hr><h4 id="CentOS-7-防火墙-firewalld"><a href="#CentOS-7-防火墙-firewalld" class="headerlink" title="CentOS 7 防火墙 firewalld"></a>CentOS 7 防火墙 firewalld</h4><p>Centos7默认安装了firewalld，如果没有安装的话，可以使用 进行安装。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">yum install firewalld firewalld-config<br></code></pre></td></tr></table></figure><ol><li><p>启动防火墙</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl start firewalld<br></code></pre></td></tr></table></figure></li><li><p>禁用防火墙</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl stop firewalld<br></code></pre></td></tr></table></figure></li></ol><p>3.设置开机启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl enable firewalld<br></code></pre></td></tr></table></figure><p>4.停止并禁用开机启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sytemctl disable firewalld<br></code></pre></td></tr></table></figure><p>5.重载防火墙</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">firewall-cmd --reload<br></code></pre></td></tr></table></figure><p>6.查看状态</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">systemctl status firewalld<br><span class="hljs-meta prompt_"># </span><span class="language-bash">或者</span><br>firewall-cmd --state<br></code></pre></td></tr></table></figure><p>7.查看版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell">firewall-cmd --version<br>```  <br><br>8.查看帮助<br>```shell<br>firewall-cmd --help<br></code></pre></td></tr></table></figure><p>9.查看区域信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">firewall-cmd --get-active-zones<br></code></pre></td></tr></table></figure><p>10.查看指定接口所属区域信息</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">firewall-cmd --get-zone-of-interface=eth0<br></code></pre></td></tr></table></figure><p>11.拒绝所有包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">firewall-cmd --panic-on<br></code></pre></td></tr></table></figure><p>12.取消拒绝状态</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">firewall-cmd --panic-off<br></code></pre></td></tr></table></figure><p>13.查看是否拒绝</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">firewall-cmd --query-panic<br></code></pre></td></tr></table></figure><p>14.将接口添加到区域(默认接口都在public) (永久生效再加上 –permanent 然后reload防火墙)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">firewall-cmd --zone=public --add-interface=eth0<br></code></pre></td></tr></table></figure><p>15.设置默认接口区域(立即生效，无需重启)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">firewall-cmd --set-default-zone=public<br></code></pre></td></tr></table></figure><p>16.更新防火墙规则(两者的区别就是第一个无需断开连接，就是firewalld特性之一动态添加规则，第二个需要断开连接，类似重启服务)  </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">firewall-cmd --reload<br><span class="hljs-meta prompt_"># </span><span class="language-bash">或</span><br>firewall-cmd --complete-reload<br></code></pre></td></tr></table></figure><p>17.查看指定区域所有打开的端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">firewall-cmd --zone=public --list-ports<br></code></pre></td></tr></table></figure><p>18.在指定区域打开端口（记得重启防火墙）(永久生效再加上 –permanent) </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">firewall-cmd --zone=public --add-port=80/tcp<br></code></pre></td></tr></table></figure><p>说明：<br>–zone 作用域<br>–add-port&#x3D;8080&#x2F;tcp 添加端口，格式为：端口&#x2F;通讯协议<br>–permanent  永久生效，没有此参数重启后失效</p><h4 id="制作Linux服务并设置开机自启动"><a href="#制作Linux服务并设置开机自启动" class="headerlink" title="制作Linux服务并设置开机自启动"></a>制作Linux服务并设置开机自启动</h4><h5 id="使用systemd配置开机启动（推荐）"><a href="#使用systemd配置开机启动（推荐）" class="headerlink" title="使用systemd配置开机启动（推荐）"></a>使用systemd配置开机启动（推荐）</h5><p>查看有哪些配置了开机启动服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">systemctl list-unit-files --<span class="hljs-built_in">type</span>=service --state=enabled<br></code></pre></td></tr></table></figure><p>在 &#x2F;etc&#x2F;systemd&#x2F;system&#x2F; 路径下创建 mysql.service 文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd /etc/systemd/system/<br>vi mysql.service<br></code></pre></td></tr></table></figure><p>写入如下内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs shell">[Unit]<br>Description=MySQL Database Server<br><br>[Service]<br>Type=forking<br>PermissionsStartOnly=true<br>PIDFile=/data/mysql/mysql.pid<br>ExecStart=/usr/local/mysql/bin/mysqld_safe --defaults-file=/etc/my.cnf<br>ExecReload=/bin/kill -USR2 $MAINPID<br>ExecStop=/bin/kill -TERM $MAINPID<br>TimeoutSec=300<br>PrivateTmp=true<br>User=mysql<br>Group=mysql<br>Restart=on-failure<br><br>[Install]<br>WantedBy=multi-user.target<br></code></pre></td></tr></table></figure><p>设置开机自启动</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_"># </span><span class="language-bash">查看是否配置开机启动</span><br>systemctl is-enabled mysql<br><span class="hljs-meta prompt_"># </span><span class="language-bash">设置开机启动</span><br>systemctl enable mysql<br><span class="hljs-meta prompt_"># </span><span class="language-bash">取消开机自启动</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">systemctl <span class="hljs-built_in">disable</span> mysql</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">查看服务当前状态</span><br>systemctl status mysql<br><span class="hljs-meta prompt_"># </span><span class="language-bash">启动nginx服务</span><br>systemctl start mysql<br><span class="hljs-meta prompt_"># </span><span class="language-bash">停止nginx服务</span><br>systemctl stop mysql<br><span class="hljs-meta prompt_"># </span><span class="language-bash">重启nginx服务</span><br>systemctl restart mysql<br></code></pre></td></tr></table></figure><hr><h5 id="使用chkconfig配置开机启动（被淘汰的方式）"><a href="#使用chkconfig配置开机启动（被淘汰的方式）" class="headerlink" title="使用chkconfig配置开机启动（被淘汰的方式）"></a>使用chkconfig配置开机启动（被淘汰的方式）</h5><ol><li>查看chkconfig配置了多少开机启动<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">chkconfig --list<br></code></pre></td></tr></table></figure></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">service-name  0:off  1:off  2:on   3:on   4:on   5:on   6:off<br></code></pre></td></tr></table></figure><p>其中每个数字代表一个运行级别：<br>0: 关机<br>1: 单用户模式<br>2: 多用户，无网络<br>3: 完全多用户模式（标准的运行级别）<br>4: 未使用的<br>5: 带图形界面的完全多用户模式<br>6: 重启<br>如果服务在某个运行级别上是 on，则表示它在这个运行级别上会被启动。<br>查看特定服务的状态: 如果你想查看某个特定服务的状态，可以使用 chkconfig –list &lt;service-name&gt; 命令</p><h5 id="使用-etc-rc-d-rc-local-配置开机启动"><a href="#使用-etc-rc-d-rc-local-配置开机启动" class="headerlink" title="使用 &#x2F;etc&#x2F;rc.d&#x2F;rc.local 配置开机启动"></a>使用 &#x2F;etc&#x2F;rc.d&#x2F;rc.local 配置开机启动</h5><p>尽管这种方法不被推荐，但在某些情况下，你可能希望直接在 &#x2F;etc&#x2F;rc.d&#x2F;rc.local 文件中添加命令来启动服务。</p>]]></content>
    
    
    <categories>
      
      <category>系统环境</category>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows 系统 搭建 Linux 环境</title>
    <link href="/blog/2024/08/2c4f755ae28a.html"/>
    <url>/blog/2024/08/2c4f755ae28a.html</url>
    
    <content type="html"><![CDATA[<h4 id="下载信息"><a href="#下载信息" class="headerlink" title="下载信息"></a>下载信息</h4><h5 id="VMware-Workstation-Player"><a href="#VMware-Workstation-Player" class="headerlink" title="VMware Workstation Player"></a>VMware Workstation Player</h5><p><strong><a href="https://www.vmware.com/info/workstation-player/evaluation">下载 VMware Workstation Player</a></strong><br>VMware Workstation Player和VMware Pro的主要区别在于功能、‌许可证和技术支持。‌</p><ul><li> <br>  <strong>功能方面</strong>，‌VMware Workstation Player是一款免费的虚拟化软件，‌主要用于家庭或个人用户。‌它的功能相对较简单，‌主要用于运行已有的虚拟机，‌但不能创建新的虚拟机或管理已有的虚拟机。‌相比之下，‌VMware Pro是一款专业的虚拟化软件，‌带有更多的高级特性，‌如支持创建新的虚拟机、‌虚拟机录制和回放、‌回收虚拟机内存、‌多屏幕交互、‌批量部署虚拟机等。‌此外，‌VMware Pro还支持配合其他VMware产品进行使用，‌具有更强的扩展性。‌</li><li> <br>  <strong>许可证方面</strong>，‌VMware Workstation Player是免费产品，‌用户可以在官网下载一些虚拟机镜像来使用。‌而VMware Pro是收费产品，‌用户需要购买许可证来使用，‌并且提供不同版本以满足不同需求。‌</li><li> <br>  <strong>技术支持方面</strong>，‌VMware Workstation Player的技术支持是基于社区提供的，‌需要用户到VMware官网寻求解决方案。‌而VMware Pro作为付费产品，‌提供了全面的技术支持，‌包括在线和电话技术支持，‌以及其他一些优先服务。‌</li></ul><p>总的来说，‌VMware Workstation Player面向家庭和个人用户，‌功能相对较为简单且免费；‌而VMware Pro则适合需要更多高级功能和专业支持的企业或专业用户<br><a href="https://download3.vmware.com/software/WKST-PLAYER-1750/VMware-player-full-17.5.0-22583795.exe">直接下载的链接</a><br><img src="/blog/2024/08/2c4f755ae28a/file-20240814213854954.png"><br>如果遇到上述问题，复制 URL 可以使用如迅雷等下载软件可以直接下载<br><img src="/blog/2024/08/2c4f755ae28a/file-20240814214146361.png"></p><blockquote><p><strong>下载完成后可以直接安装，根据个人选择安装路径根据需要安装即可；过程可能会重启电脑，记得保存个人数据在重启电脑</strong></p></blockquote><p><strong>使用免费许可证即可</strong><br><img src="/blog/2024/08/2c4f755ae28a/file-20240814220432680.png"></p><hr><h5 id="下载Linux系统ISO文件"><a href="#下载Linux系统ISO文件" class="headerlink" title="下载Linux系统ISO文件"></a>下载Linux系统ISO文件</h5><p>[阿里云ISO镜像网](<a href="https://mirrors.aliyun.com/centos/7.9.2009/isos/x86_64/">https://mirrors.aliyun.com/centos/7.9.2009/isos/x86_64/</a><br>我这里使用的linux系统是 CentOS 版本是 7.9；因为我电脑的架构是 X86_64 架构，如果是其他架构选择对应架构即可；选择这个4G大小的，自行选择所需要的包体<br><img src="/blog/2024/08/2c4f755ae28a/file-20240814220256294.png"></p><p><strong>CentOS版本不同大小的各个版本区别</strong></p><ol><li>Everything版：这个版本包含了CentOS的所有软件组件，因此其体积相对较大，高达7G，甚至10G。它为用户提供了全面的软件包选择，无需再额外下载其他组件。</li><li>DVD版：这个版本是CentOS的常用版本，也被称为标准安装盘。它包含了大量的常用软件，因此在大部分情况下，安装时无需再在线下载其他软件。这个版本的体积大约为4G。</li><li>Minimal版：与DVD版和Everything版不同，Minimal版是一个精简版本，只包含系统必须的几个基本软件包。它的体积相对较小，只有600多MB，适合那些只需要基本功能的用户或系统。</li><li><ol><li>NetInstall版：这个版本主要用于网络安装和系统救援。与DVD版和Everything版不同，NetInstall版的软件包并不直接包含在映像文件中，而是需要在安装过程中通过网络下载。</li></ol></li></ol><table><thead><tr><th>File Name</th><th>File Size</th><th>Date</th></tr></thead><tbody><tr><td><a href="https://mirrors.aliyun.com/centos/7.9.2009/isos/x86_64/CentOS-7-x86_64-DVD-2009.iso">CentOS-7-x86_64-DVD-2009.iso</a></td><td>4.4 GB</td><td>2020-11-04 19:37</td></tr><tr><td><a href="https://mirrors.aliyun.com/centos/7.9.2009/isos/x86_64/CentOS-7-x86_64-DVD-2207-02.iso">CentOS-7-x86_64-DVD-2207-02.iso</a></td><td>4.4 GB</td><td>2022-07-26 23:10</td></tr><tr><td><a href="https://mirrors.aliyun.com/centos/7.9.2009/isos/x86_64/CentOS-7-x86_64-Everything-2009.iso">CentOS-7-x86_64-Everything-2009.iso</a></td><td>9.5 GB</td><td>2020-11-02 23:18</td></tr><tr><td><a href="https://mirrors.aliyun.com/centos/7.9.2009/isos/x86_64/CentOS-7-x86_64-Everything-2207-02.iso">CentOS-7-x86_64-Everything-2207-02.iso</a></td><td>9.6 GB</td><td>2022-07-27 02:09</td></tr><tr><td><a href="https://mirrors.aliyun.com/centos/7.9.2009/isos/x86_64/CentOS-7-x86_64-Minimal-2009.iso?spm=a2c6h.25603864.0.0.18de6aea3xl9mc">CentOS-7-x86_64-Minimal-2009.iso</a></td><td>973.0 MB</td><td>2020-11-03 22:55</td></tr><tr><td><a href="https://mirrors.aliyun.com/centos/7.9.2009/isos/x86_64/CentOS-7-x86_64-Minimal-2207-02.iso">CentOS-7-x86_64-Minimal-2207-02.iso</a></td><td>988.0 MB</td><td>2022-07-26 23:10</td></tr><tr><td><a href="https://mirrors.aliyun.com/centos/7.9.2009/isos/x86_64/CentOS-7-x86_64-NetInstall-2009.iso">CentOS-7-x86_64-NetInstall-2009.iso</a></td><td>575.0 MB</td><td>2020-10-27 00:26</td></tr></tbody></table><hr><h5 id="Windows-Terminal"><a href="#Windows-Terminal" class="headerlink" title="Windows Terminal"></a>Windows Terminal</h5><p><strong><a href="https://apps.microsoft.com/detail/9n0dx20hk701">下载 Windows Terminal</a></strong><br>Windows 终端程序是一款新式、快速、高效、强大且高效的终端应用程序，适用于命令行工具和命令提示符，PowerShell和 WSL 等 Shell 用户。主要功能包括多个选项卡、窗格、Unicode、和 UTF-8 字符支持，GPU 加速文本渲染引擎以及自定义主题、样式和配置。 这是一个开源项目，我们欢迎社区参与。如要参与，请访问 <a href="https://github.com/microsoft/terminal">https://github.com/microsoft/terminal</a></p><hr><h4 id="使用VMware-Player创建Linux"><a href="#使用VMware-Player创建Linux" class="headerlink" title="使用VMware Player创建Linux"></a>使用VMware Player创建Linux</h4><h5 id="创建虚拟机"><a href="#创建虚拟机" class="headerlink" title="创建虚拟机"></a>创建虚拟机</h5><ol><li><p>创建新虚拟机<br><img src="/blog/2024/08/2c4f755ae28a/file-20240814220743899.png" alt="创建新虚拟机"></p></li><li><p>选稍后安装操作系统<br><img src="/blog/2024/08/2c4f755ae28a/file-20240814220914456.png" alt="稍后安装操作系统"></p></li><li><p>选Linux；因为我们是 CentOS 7.9 版本，所以选CentOS 7 64 位<br><img src="/blog/2024/08/2c4f755ae28a/file-20240814221222424.png" alt="Linux"></p></li><li><p>基本信息，选择自己需要的安装路径<br><img src="/blog/2024/08/2c4f755ae28a/file-20240814221416720.png" alt="安装路径"></p></li><li><p>可以使用默认 20G，我这边给40，给10G也没问题的，后续如果不够是可以扩容磁盘大小的；下面选存储为单个文件，这样加载Linux会快些<br><img src="/blog/2024/08/2c4f755ae28a/file-20240814221513697.png" alt="磁盘大小"></p></li><li><p>这是操作的基本信息，选择自定义邮件<br><img src="/blog/2024/08/2c4f755ae28a/file-20240814221649888.png" alt="自定义硬件"></p></li><li><p>点开自定义硬件后，将内存给 4G，处理器给4核，网络适配器选桥接模式（方便后面使用 SSH 连接操作）<br><img src="/blog/2024/08/2c4f755ae28a/file-20240814221824163.png" alt="自定义硬件"></p></li><li><p>新CD&#x2F;DVD 选择之前下载的 ISO 文件，完成后点右下角关闭<br><img src="/blog/2024/08/2c4f755ae28a/file-20240814222029676.png" alt="DVD"></p></li><li><p>准备好后的所有信息，点击完成<br><img src="/blog/2024/08/2c4f755ae28a/file-20240814222115449.png" alt="准备好信息"></p></li></ol><hr><h5 id="安装Linux环境"><a href="#安装Linux环境" class="headerlink" title="安装Linux环境"></a>安装Linux环境</h5><ol><li><p>启动虚拟机<br><img src="/blog/2024/08/2c4f755ae28a/file-20240814222218764.png" alt="启动虚拟机"></p></li><li><p>选第一个安装 CentOS 7，选择完后等待安装<br><img src="/blog/2024/08/2c4f755ae28a/file-20240814222301953.png" alt="安装Linux"></p></li><li><p>选择语言，选好后点继续<br><img src="/blog/2024/08/2c4f755ae28a/file-20240814222436926.png" alt="选择语言"></p></li><li><p>先处理网络和主机<br><img src="/blog/2024/08/2c4f755ae28a/file-20240814222522960.png" alt="处理网络"></p></li><li><p>打开网络，自动获取ip信息，下面可以更改主机名，完成后点左上角完成<br><img src="/blog/2024/08/2c4f755ae28a/file-20240814222650638.png" alt="打开网络"></p></li><li><p>安装位置点开后查看是否是正确即可<br><img src="/blog/2024/08/2c4f755ae28a/file-20240814222821687.png" alt="安装位置"></p></li><li><p>软件选择选最小安装，我们是用来学习Linux，不需要图像界面<br><img src="/blog/2024/08/2c4f755ae28a/file-20240814222856055.png" alt="软件选择"></p></li><li><p>日期&amp;时间 地区选亚洲，城市选上海，网络时间打开，如果打不开是网络和主机名配置错误<br><img src="/blog/2024/08/2c4f755ae28a/file-20240814223019216.png" alt="日期&amp;时间"></p></li><li><p>信息无误后，点击开始安装<br><img src="/blog/2024/08/2c4f755ae28a/file-20240814223129967.png" alt="开始安装"></p></li><li><p>设置ROOT密码，我这把设置的密码是 root，方便记忆与学习；</p><blockquote><p>如果是个人使用我推荐用 root 作为密码，如果有同事或者朋友想连接你的服务器，或者写一些开源的项目或者文章不会泄露任何个人隐私信息，root 也好记忆<br><img src="/blog/2024/08/2c4f755ae28a/file-20240814223207170.png" alt="设置root密码"></p></blockquote></li><li><p>设置成功，如果点击完成无效，多点几次，因为密码太简单需要多次确认无误<br><img src="/blog/2024/08/2c4f755ae28a/file-20240814223242450.png" alt="设置成功"></p></li><li><p>安装完成后重启<br><img src="/blog/2024/08/2c4f755ae28a/file-20240814223500271.png" alt="重启"></p></li><li><p>输入 root 用户登录，root 密码<br><img src="/blog/2024/08/2c4f755ae28a/file-20240814223636064.png" alt="登录linux"></p></li></ol><hr><h4 id="使用SSH工具连接Linux"><a href="#使用SSH工具连接Linux" class="headerlink" title="使用SSH工具连接Linux"></a>使用SSH工具连接Linux</h4><h5 id="Linux-信息获取"><a href="#Linux-信息获取" class="headerlink" title="Linux 信息获取"></a>Linux 信息获取</h5><p>使用命令查看ip信息获取 ip地址，我这里是 192.168.0.106</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ip addr<br></code></pre></td></tr></table></figure><p><img src="/blog/2024/08/2c4f755ae28a/file-20240814223850059.png" alt="ip信息"></p><hr><h5 id="Windows-SSH-连接-Linux"><a href="#Windows-SSH-连接-Linux" class="headerlink" title="Windows SSH 连接 Linux"></a>Windows SSH 连接 Linux</h5><p>我这里演示使用的是 Windows Terminal 来连接当前的Linux服务器<br><a href="https://learn.microsoft.com/zh-cn/windows/terminal/tutorials/ssh">Windows 终端 SSH | Microsoft Learn</a> 文档地址，如遇到连接问题，可以看看文档有没有什么解决方案</p><p><img src="/blog/2024/08/2c4f755ae28a/file-20240815141748165.png"><br>先确认有没有 ssh 环境，没有则根据上面的文档地址安装<br>使用<code>ssh</code>命令连接到linux环境</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ssh root@192.168.0.106<br></code></pre></td></tr></table></figure><p>输入后，他会向你确认服务器没有这个连接信息密钥，是否确认连接，我们输入 yes 即可<br><img src="/blog/2024/08/2c4f755ae28a/file-20240815142119664.png"></p><p>再次输入 <code>ssh root@192.168.0.106</code> 连接，输入密码 root ，即可连接到Linux服务器了<br><img src="/blog/2024/08/2c4f755ae28a/file-20240815142202228.png"></p>]]></content>
    
    
    <categories>
      
      <category>系统环境</category>
      
      <category>Linux</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Windows</tag>
      
      <tag>Linux</tag>
      
      <tag>VMware</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux 系统 MySQL 安装教程</title>
    <link href="/blog/2024/08/65c424735cd5.html"/>
    <url>/blog/2024/08/65c424735cd5.html</url>
    
    <content type="html"><![CDATA[<h4 id="系统信息"><a href="#系统信息" class="headerlink" title="系统信息"></a>系统信息</h4><p>使用命令查看linux信息，我的系统是 <code>CentOS Linux 7 (Core)</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">cat /etc/os-release<br></code></pre></td></tr></table></figure><p><img src="/blog/public/2024/08/65c424735cd5/file-20240815145655706.png"></p><p>确定一下系统的glibc版本，使用如下命令，我的版本是glibc-2.17，下载对应的版本MySQL</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">rpm -qa | grep glibc<br></code></pre></td></tr></table></figure><p><img src="/blog/public/2024/08/65c424735cd5/file-20240815181707902.png"></p><p>检查是否已经安装过mysql</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">rpm -qa | grep mysql<br></code></pre></td></tr></table></figure><p>如果环境中有遗留mysql则执行删除命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">rpm -e --nodeps mysql-xxxxxxxxx<br></code></pre></td></tr></table></figure><p>查询遗留的mysql设置或命令，执行两条命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">whereis mysql<br>find / -name mysql<br></code></pre></td></tr></table></figure><p>如通过上述两条命令发现有遗留，则执行清除命令，将所有查到的mysql可以删除</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">rm</span> -rf  xxx xxx<br></code></pre></td></tr></table></figure><hr><h4 id="下载信息"><a href="#下载信息" class="headerlink" title="下载信息"></a>下载信息</h4><h5 id="推荐-正常下载上传到Linux服务器"><a href="#推荐-正常下载上传到Linux服务器" class="headerlink" title="(推荐)正常下载上传到Linux服务器"></a>(推荐)正常下载上传到Linux服务器</h5><p>MySQL 8.4.2 LTS，服务器我们用长期支持版本<br><a href="https://dev.mysql.com/downloads/mysql/">MySQL :: Download MySQL Community Server</a><br><img src="/blog/public/2024/08/65c424735cd5/file-20240815181847532.png"><br>连接到Linux后，执行创建 &#x2F;data&#x2F;yunwei 目录，并进入到目录下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mkdir -p /data/yunwei &amp;&amp; cd /data/yunwei<br></code></pre></td></tr></table></figure><p>上传MySQL压缩文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">rz<br></code></pre></td></tr></table></figure><hr><h5 id="可选-使用-wget-下载"><a href="#可选-使用-wget-下载" class="headerlink" title="(可选)使用 wget 下载"></a>(可选)使用 wget 下载</h5><p>连接到Linux后，执行创建 &#x2F;data&#x2F;yunwei 目录，并进入到目录下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mkdir -p /data/yunwei &amp;&amp; cd /data/yunwei<br></code></pre></td></tr></table></figure><p>使用 wget 命令在Linux上直接下载对应的包体</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">wget https://cdn.mysql.com//Downloads/MySQL-8.4/mysql-8.4.2-linux-glibc2.17-x86_64.tar.xz<br></code></pre></td></tr></table></figure><hr><h4 id="解压安装MySQL"><a href="#解压安装MySQL" class="headerlink" title="解压安装MySQL"></a>解压安装MySQL</h4><ol><li><p>解码命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">tar -xvf mysql-8.4.2-linux-glibc2.17-x86_64.tar.xz<br></code></pre></td></tr></table></figure></li><li><p>剪切到 <code>/usr/local/mysql</code> 中去</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mv mysql-8.4.2-linux-glibc2.17-x86_64 /usr/local/mysql<br></code></pre></td></tr></table></figure></li><li><p>找一个目录来存储mysql的数据，如果你的数据量大，记得要找个大点的盘和目录，我的是在&#x2F;data目录下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mkdir -p /data/mysql/data<br></code></pre></td></tr></table></figure></li><li><p>创建 mariadb.log 文件 MySQL 不会自动创建</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">touch /data/mysql/mariadb.log<br></code></pre></td></tr></table></figure></li><li><p>创建 mysql.pid 文件 MySQL 不会自动创建</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">touch /data/mysql/mysql.pid<br></code></pre></td></tr></table></figure></li></ol><hr><h5 id="MySQL权限管理"><a href="#MySQL权限管理" class="headerlink" title="MySQL权限管理"></a>MySQL权限管理</h5><ol><li><p>创建创建MYSQL⽤户和⽤户组</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">groupadd mysql<br><br>useradd -g mysql mysql<br></code></pre></td></tr></table></figure></li><li><p>更改mysql目录下所有的目录及文件夹所属的用户组和用户，以及权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell">chmod -R 775 /usr/local/mysql<br><br>chown -R mysql:mysql /usr/local/mysql<br><br>chmod -R 775 /data/mysql<br><br>chown -R mysql:mysql /data/mysql<br><br>chown -R 777 /tmp<br></code></pre></td></tr></table></figure></li></ol><hr><h5 id="准备MYSQL的配置⽂件"><a href="#准备MYSQL的配置⽂件" class="headerlink" title="准备MYSQL的配置⽂件"></a>准备MYSQL的配置⽂件</h5><ol><li><p>备份原有的配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">cp /etc/my.cnf /etc/my.cnf.back<br></code></pre></td></tr></table></figure></li><li><p>将改配置覆盖进去</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">vi /etc/my.cnf<br></code></pre></td></tr></table></figure></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs shell">[mysqld]<br><span class="hljs-meta prompt_">#</span><span class="language-bash">datadir=/var/lib/mysql</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">socket=/var/lib/mysql/mysql.sock</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Disabling symbolic-links is recommended to prevent assorted security risks</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">symbolic-links=0</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">Settings user and group are ignored when systemd is used.</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">If you need to run mysqld under a different user or group,</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">customize your systemd unit file <span class="hljs-keyword">for</span> mariadb according to the</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">instructions <span class="hljs-keyword">in</span> http://fedoraproject.org/wiki/Systemd</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">数据库基本信息</span><br>bind-address=0.0.0.0<br>port=3306<br>user=mysql<br>basedir=/usr/local/mysql<br>datadir=/data/mysql/data<br>socket=/tmp/mysql.sock<br><span class="hljs-meta prompt_">#</span><span class="language-bash">socket=/data/mysql/mysql.sock</span><br>log-error=/data/mysql/mysql.err<br>pid-file=/data/mysql/mysql.pid<br>symbolic-links=0<br>explicit_defaults_for_timestamp=true<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">数据库连接配置</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">允许最大连接数</span><br>max_connections=200<br><span class="hljs-meta prompt_"># </span><span class="language-bash">允许连接失败的次数。</span><br>max_connect_errors=10<br><span class="hljs-meta prompt_"># </span><span class="language-bash">服务端使用的字符集默认为utf8mb4</span><br>character-set-server=utf8mb4<br><span class="hljs-meta prompt_"># </span><span class="language-bash">创建新表时将使用的默认存储引擎</span><br>default-storage-engine=INNODB<br><br>[mysql]<br><span class="hljs-meta prompt_"># </span><span class="language-bash">设置mysql客户端默认字符集</span><br>default-character-set=utf8mb4<br><br>[client]<br><span class="hljs-meta prompt_"># </span><span class="language-bash">设置mysql客户端连接服务端时默认使用的端口</span><br>port=3306<br>default-character-set=utf8mb4<br><br>[mysqld_safe]<br><span class="hljs-meta prompt_">#</span><span class="language-bash">log-error=/var/log/mariadb/mariadb.log</span><br>log-error=/data/mysql/mariadb.log<br><span class="hljs-meta prompt_">#</span><span class="language-bash">pid-file=/var/run/mariadb/mariadb.pid</span><br>pid-file=/data/mysql/mariadb.pid<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash"><span class="hljs-comment"># include all files from the config directory</span></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash"></span><br><span class="language-bash">!includedir /etc/my.cnf.d</span><br></code></pre></td></tr></table></figure><hr><h4 id="开始安装MySQL"><a href="#开始安装MySQL" class="headerlink" title="开始安装MySQL"></a>开始安装MySQL</h4><h5 id="初始化MySQL"><a href="#初始化MySQL" class="headerlink" title="初始化MySQL"></a>初始化MySQL</h5><ol><li><p>初始化mysql，一定要记住初始化输出日志末尾的密码（数据库管理员临时密码）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">/usr/local/mysql/bin/mysqld --initialize --user=mysql --datadir=/data/mysql/data --basedir=/usr/local/mysql<br></code></pre></td></tr></table></figure></li><li><p>如果屏幕上没有打印则去日志文件中查看初始化完成后的临时密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">cat /data/mysql/mysql.err<br></code></pre></td></tr></table></figure></li></ol><ul><li>我生成的密码 A temporary password is generated for root@localhost: xiMFijKi&gt;3vY</li></ul><h5 id="启动mysql服务器"><a href="#启动mysql服务器" class="headerlink" title="启动mysql服务器"></a>启动mysql服务器</h5><ol><li><p>先将mysql.server放置到&#x2F;etc&#x2F;init.d&#x2F;mysql中</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">cp /usr/local/mysql/support-files/mysql.server /etc/init.d/mysql<br></code></pre></td></tr></table></figure></li><li><p>启动mysql命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">service mysql start<br></code></pre></td></tr></table></figure></li><li><p>查看是否启动成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">ps -ef | grep mysql<br></code></pre></td></tr></table></figure></li></ol><hr><ol start="4"><li>修改初始密码</li></ol><ul><li>首先登录mysql，密码是上述初始化时，日志最后一行生成的那个临时密码<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">/usr/local/mysql/bin/mysql -u root -p<br></code></pre></td></tr></table></figure></li><li>修改密码 <blockquote><p>如果是个人使用我推荐用 root 作为密码，如果有同事或者朋友想连接你的数据库，或者写一些开源的项目或者文章不会泄露任何个人隐私信息，root 也好记忆</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs shell">ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED BY &#x27;root&#x27;;<br><br>FLUSH PRIVILEGES;<br><br>EXIT;<br></code></pre></td></tr></table></figure></li><li>使用新密码重新连接 MySQL 服务<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">/usr/local/mysql/bin/mysql -u root -p<br></code></pre></td></tr></table></figure></li></ul><hr><h5 id="开放远程连接"><a href="#开放远程连接" class="headerlink" title="开放远程连接"></a>开放远程连接</h5><ol><li><p>进入mysql库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">use mysql;<br></code></pre></td></tr></table></figure></li><li><p>更新mysql库中 user 为 root 的 host 数据</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">update user set user.Host=&#x27;%&#x27; where user.User=&#x27;root&#x27;;<br></code></pre></td></tr></table></figure></li><li><p>刷新配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">flush privileges;<br></code></pre></td></tr></table></figure></li></ol><p>如果遇到连不上 ，telnet 都连不上对应端口时，可能是linux 开启防火墙了，需要将 3306 添加到防火墙中</p><ol><li><p>telnet 命令，看是否访问的到</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">telnet 192.168.0.106 3306<br></code></pre></td></tr></table></figure></li><li><p>检查防火墙状态</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo systemctl status firewalld<br></code></pre></td></tr></table></figure><p><strong>如果防火墙处于关闭状态，可以跳过此步骤</strong>。如果防火墙处于运行状态，需要开放 <code>MySQL</code> 服务的端口（默认为<code>3306</code>）</p></li><li><p>防火墙开放 MySQL 端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo firewall-cmd --permanent --add-port=3306/tcp<br>sudo firewall-cmd --reload<br></code></pre></td></tr></table></figure></li><li><p>查看指定区域所有打开的端口</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">firewall-cmd --zone=public --list-ports<br></code></pre></td></tr></table></figure></li></ol><hr><h4 id="将mysql设置为开机启动服务"><a href="#将mysql设置为开机启动服务" class="headerlink" title="将mysql设置为开机启动服务"></a>将mysql设置为开机启动服务</h4><p>在 &#x2F;etc&#x2F;systemd&#x2F;system&#x2F; 路径下创建 mysql.service 文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs shell">cd /etc/systemd/system/<br>vi mysql.service<br></code></pre></td></tr></table></figure><p>写入如下内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs shell">[Unit]<br>Description=MySQL Database Server<br><br>[Service]<br>Type=forking<br>PermissionsStartOnly=true<br>PIDFile=/data/mysql/mysql.pid<br>ExecStart=/usr/local/mysql/bin/mysqld_safe --defaults-file=/etc/my.cnf<br>ExecReload=/bin/kill -USR2 $MAINPID<br>ExecStop=/bin/kill -TERM $MAINPID<br>TimeoutSec=300<br>PrivateTmp=true<br>User=mysql<br>Group=mysql<br>Restart=on-failure<br><br>[Install]<br>WantedBy=multi-user.target<br></code></pre></td></tr></table></figure><p>设置开机自启动</p><pre><code class="shell"># 查看是否配置开机启动systemctl is-enabled mysql# 设置开机启动systemctl enable mysql# 取消开机自启动#systemctl disable mysql# 查看服务当前状态systemctl status mysql# 启动nginx服务systemctl start mysql# 停止nginx服务systemctl stop mysql# 重启nginx服务systemctl restart mysql</code></pre>]]></content>
    
    
    <categories>
      
      <category>开发环境</category>
      
      <category>数据库</category>
      
      <category>MySQL</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Linux</tag>
      
      <tag>数据库</tag>
      
      <tag>MySQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows 系统 MySQL 9.0.1 安装教程</title>
    <link href="/blog/2024/08/1200d9535352.html"/>
    <url>/blog/2024/08/1200d9535352.html</url>
    
    <content type="html"><![CDATA[<p>我使用 MySQL 9.0.1 版本来作为安装教程，MySQL 8.X 版本一样可以使用该方式安装。</p><h4 id="下载信息"><a href="#下载信息" class="headerlink" title="下载信息"></a>下载信息</h4><p>MySQL最新发布版本，我推荐使用 zip 的方式安装<br><img src="/blog/2024/08/1200d9535352/file-20240813180120534.png"></p><ul><li><a href="https://dev.mysql.com/downloads/mysql/">MySQL :: Download MySQL Community Server</a></li></ul><p>MySQL 8.X 版本，我推荐使用 zip 的方式安装<br><img src="/blog/2024/08/1200d9535352/file-20240813180223258.png"></p><ul><li><a href="https://downloads.mysql.com/archives/community/">MySQL :: Download MySQL Community Server (Archived Versions)</a></li></ul><p>下载完成后解压<br><img src="/blog/2024/08/1200d9535352/file-20240813214955284.png"></p><hr><h4 id="配置初始化"><a href="#配置初始化" class="headerlink" title="配置初始化"></a>配置初始化</h4><p>解压后的目录没有 <code>my.ini</code> 文件，自行创建在安装根目录下添加 <code>my.ini</code> (新建文本文件，将文件后缀改为 .ini)，写入基本配置:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs shell">[mysqld]<br><span class="hljs-meta prompt_"># </span><span class="language-bash">设置3306端口</span><br>port=3306<br><span class="hljs-meta prompt_"># </span><span class="language-bash">设置mysql的安装目录</span><br>basedir=D:\Application\Oracle\MySQL\mysql-9.0.1-winx64<br><span class="hljs-meta prompt_"># </span><span class="language-bash">设置mysql数据库的数据的存放目录</span><br>datadir=D:\Application\Oracle\MySQL\mysql-9.0.1-winx64\Data<br><span class="hljs-meta prompt_"># </span><span class="language-bash">允许最大连接数</span><br>max_connections=200<br><span class="hljs-meta prompt_"># </span><span class="language-bash">允许连接失败的次数。</span><br>max_connect_errors=10<br><span class="hljs-meta prompt_"># </span><span class="language-bash">服务端使用的字符集默认为utf8mb4</span><br>character-set-server=utf8mb4<br><span class="hljs-meta prompt_"># </span><span class="language-bash">创建新表时将使用的默认存储引擎</span><br>default-storage-engine=INNODB<br><span class="hljs-meta prompt_"># </span><span class="language-bash">默认使用“mysql_native_password”插件认证</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">mysql_native_password</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">mysql 9.0 是不支持该参数的</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">mysql 8.X 是支持该参数，请根据版本查看该参数</span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">default_authentication_plugin=mysql_native_password</span><br>[mysql]<br><span class="hljs-meta prompt_"># </span><span class="language-bash">设置mysql客户端默认字符集</span><br>default-character-set=utf8mb4<br>[client]<br><span class="hljs-meta prompt_"># </span><span class="language-bash">设置mysql客户端连接服务端时默认使用的端口</span><br>port=3306<br>default-character-set=utf8mb4<br></code></pre></td></tr></table></figure><p>配置文件中的路径要和实际存放的路径一致（不要手动创建Data文件夹，如果初始化失败请记住删除Data文件夹）<br><img src="/blog/2024/08/1200d9535352/file-20240813220101748.png"></p><hr><h4 id="初始化MySQL"><a href="#初始化MySQL" class="headerlink" title="初始化MySQL"></a>初始化MySQL</h4><p>在安装时，避免权限问题出错我们尽量使用管理员身份运行CMD，否则在安装时会报错，会导致安装失败的情况<br><img src="/blog/2024/08/1200d9535352/file-20240813220308898.png"></p><p>因为我存放的目录是在D盘，先切换盘符在进入到指定目录，需要进入到MySQL安装目录下的<code>bin</code>目录<br><img src="/blog/2024/08/1200d9535352/file-20240813220426776.png"></p><p>在MySQL目录下的bin目录下执行命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mysqld --initialize --console<br></code></pre></td></tr></table></figure><p><img src="/blog/2024/08/1200d9535352/file-20240813221525152.png"></p><blockquote><p>注意！[注意] [MY-010454] [服务器] root@localhost: G#syB6W&#x2F;jNMG 就是初始密码（不含首位空格）。在没有更改密码前，需要记住这个密码，后续登录需要用到。复制密码先保存起来!!!</p></blockquote><hr><h4 id="安装MySQL服务-启动MySQL-服务"><a href="#安装MySQL服务-启动MySQL-服务" class="headerlink" title="安装MySQL服务&amp;启动MySQL 服务"></a>安装MySQL服务&amp;启动MySQL 服务</h4><p>安装MySQL服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mysqld --install [服务名]                     ###（服务名可以不加默认为mysql）<br></code></pre></td></tr></table></figure><p><img src="/blog/2024/08/1200d9535352/file-20240813225102691.png"></p><p>表示成功了</p><blockquote><p>如果出现了 The service already exists!<br><img src="/blog/2024/08/1200d9535352/file-20240813225149247.png"><br>说明mysql 名称存在<br>可以把它删除掉<br>SC删除的MySQL<br><img src="/blog/2024/08/1200d9535352/file-20240813225415079.png"><br>在执行上面安装服务<br><img src="/blog/2024/08/1200d9535352/file-20240813225443911.png"></p></blockquote><p>删除对应服务名称命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sc delete mysql<br></code></pre></td></tr></table></figure><p>服务安装成功之后通过命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">net start mysql<br></code></pre></td></tr></table></figure><p>启动MySQL的服务<br><img src="/blog/2024/08/1200d9535352/file-20240813225551016.png"></p><p>[可选] 关掉mysql服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">net stop mysql<br></code></pre></td></tr></table></figure><p><img src="/blog/2024/08/1200d9535352/file-20240813231147073.png"></p><hr><h4 id="连接MySQL-修改密码"><a href="#连接MySQL-修改密码" class="headerlink" title="连接MySQL&amp;修改密码"></a>连接MySQL&amp;修改密码</h4><p>在当前数据库的bin目录下 有个 <code>mysql.exe</code> 是可以用于连接mysql服务的命令行客户端工具</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">mysql -h localhost -P 3306 -u root -p<br></code></pre></td></tr></table></figure><p>输入上面命令后复制之前保存的默认密码 G#syB6W&#x2F;jNMG 就可以连接到mysql服务<br><img src="/blog/2024/08/1200d9535352/file-20240813230142913.png"></p><p>修改默认密码</p><ol><li>修改密码SQL<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">ALTER</span> <span class="hljs-keyword">USER</span> <span class="hljs-string">&#x27;root&#x27;</span>@<span class="hljs-string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="hljs-keyword">BY</span> <span class="hljs-string">&#x27;new_password&#x27;</span>;<br></code></pre></td></tr></table></figure><img src="/blog/2024/08/1200d9535352/file-20240813230633218.png"></li><li>刷新权限使修改立即生效：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">FLUSH PRIVILEGES;<br></code></pre></td></tr></table></figure><img src="/blog/2024/08/1200d9535352/file-20240813231009497.png"></li><li>退出MySQL<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql">EXIT;<br></code></pre></td></tr></table></figure><img src="/blog/2024/08/1200d9535352/file-20240813231026625.png"></li></ol><blockquote><p>如果是个人使用我推荐用 root 作为密码，如果有同事或者朋友想连接你的数据库，或者写一些开源的项目或者文章不会泄露任何个人隐私信息，root 也好记忆</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>开发环境</category>
      
      <category>数据库</category>
      
      <category>MySQL</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Windows</tag>
      
      <tag>数据库</tag>
      
      <tag>MySQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
